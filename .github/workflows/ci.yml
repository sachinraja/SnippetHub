name: CI
on: [push, pull_request]

env:
  GITHUB_PERSONAL_ID: 58836760
  NEXT_PUBLIC_SERVER_URL: http://localhost:3000
  NEXTAUTH_URL: http://localhost:3000
  POSTGRES_DB: snippethub
  POSTGRES_USER: postgres
  POSTGRES_PASSWORD: postgres
  DB_HOST: localhost
  DATABASE_URL: postgres://postgres:postgres@localhost/snippethub

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      db:
        image: postgres:13.3-alpine
        ports: ["5432:5432"]
        env:
          POSTGRES_DB: ${{env.POSTGRES_DB}}
          POSTGRES_USER: ${{env.POSTGRES_USER}}
          POSTGRES_PASSWORD: ${{env.POSTGRES_PASSWORD}}

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: checkout
        uses: actions/checkout@v2

      - name: use node.js 16.x
        uses: actions/setup-node@v2
        with:
          node-version: 16.x

      - name: cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: install dependencies
        run: npm i

      - name: generate types
        run: npm run type:gen

      - name: type check
        run: npm run type:check

      - name: lint
        run: npm run lint

      - name: migrate and seed database
        run: npx prisma migrate deploy && npm run prisma:seed

      - name: test
        run: npm test
