generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Snippet {
  id        Int      @id @default(autoincrement())
  name      String   @db.Citext
  code      String
  language  Language @default(other)
  packId    Int      @map("pack_id")
  pack      Pack     @relation(fields: [packId], references: [id])
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz

  @@unique([name, packId])
  @@map("snippet")
}

model Pack {
  id               Int       @id @default(autoincrement())
  name             String    @db.Citext
  shortDescription String    @map("short_description")
  longDescription  String?   @map("long_description")
  language         Language  @default(other)
  upvotes          Int       @default(0)
  snippets         Snippet[]
  authorId         Int       @map("author_id")
  author           User      @relation(fields: [authorId], references: [id])
  createdAt        DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt        DateTime  @updatedAt @map("updated_at") @db.Timestamptz

  @@unique([name, authorId])
  @@map("pack")
}

model User {
  id        Int      @id @default(autoincrement())
  gitHubId  Int      @unique @map("github_id")
  username  String   @unique @db.Citext
  bio       String?  @db.Text
  type      UserType @default(user)
  packs     Pack[]
  createdAt DateTime @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime @updatedAt @map("updated_at") @db.Timestamptz

  @@map("user")
}

enum Language {
  python
  javascript
  typescript
  csharp
  elixir
  html
  css
  other

  @@map("language")
}

enum UserType {
  user
  admin

  @@map("user_type")
}
